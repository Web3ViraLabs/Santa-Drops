// schema.prisma

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

enum Symbol {
  ETH
  SOL
}

model Profile {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  registered  Boolean   @default(false)
  role        Role      @default(USER)
  token       String    @unique
  image       String?
  createdAt   DateTime  @default(now())
  wallets     Wallet[]
  connections Account[]

  @@index([name, token])
}

enum Provider {
  DISCORD
  TWITTER
}

model Account {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  accountId     String?
  username      String?
  image         String?
  provider      Provider
  refresh_token String?   @db.String
  access_token  String?   @db.String
  expires_at    DateTime?
  token_type    String?
  scope         String?
  profileId     String    @db.ObjectId

  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model Wallet {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  address    String   @unique
  signature  String
  symbol     Symbol
  registered Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String  @db.ObjectId

  @@index([address, profileId])
}
